ALGORITMO

def ordenarTimes(vetor times, int prox, vetor solução, matriz vitorias):

1	solução_nova = vetor []

2	se times.tam < 1: retorne solução
3	se times.tam == 1 e solução.tam == 0: retorne times

4	se solução.tam == 0:
5		para i = 0 -> times.tam:
6			solução += [times[i]]
7			times_reman = times[:i] + times[i+1:]
8			solução_nova = ordenarTimes(times_reman, 0, solução, vitorias)
9			se solução_nova.tam > 0: quebre

10	senão se vitorias[solução[-1]][prox] == solução[-1]:
11		solução += [prox]
12		para i = 0 -> times.tam:
13			prox = times[i]
14			times_reman = times[:i] + times[i+1:]
15			solução_nova = ordenarTimes(times_reman, prox, solução, vitorias)
16			se solução_nova > 0: quebre

17	retorne solução_nova


CORRETUDE

1. Casos base:
	Quando o tamanho da instância é 0:
		O valor de 'solução' será um vetor vazio, e isto será retornado em (2), o que está correto.
	Quando o tamanho da instância é 1:
		O valor de 'solução' deve ser um vetor contendo o único valor da instância. Isso é verificado em (3).

